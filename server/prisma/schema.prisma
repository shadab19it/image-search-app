generator client {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id        String    @id @unique @default(cuid()) @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  name      String?   @db.VarChar(255)
  password  String?   @db.VarChar(255)
  otp       String?
  role      Role      @default(user)
  phone     String    @unique @db.VarChar(255)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@index([id, email, phone])
}

enum ImageType {
  Mandap
  Master
}

model MeltingFlowerIMGS {
  id          String     @id @unique @default(cuid()) @db.VarChar(255)
  code        String     @unique @db.Text
  description String?
  imageType   ImageType
  size        String?
  totalPrice  Int        @db.Integer()
  flowerPrice Int        @db.Integer()
  otherPrice  Int        @db.Integer()
  // image       AllImages? @relation("code_image")

  @@index([id])
  @@index([code])

}

model AllImages {
  id        String            @id @unique @default(cuid()) @db.VarChar(255)
  size      Int?              @db.Integer()
  code      String            @unique @db.Text
  name      String            @unique @db.Text
  imageType ImageType
  path      String            @unique @db.Text
  // metadata  MeltingFlowerIMGS @relation(fields: [imgCode], references: [code],name: "code_image")

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@index([id, path, name])
  @@index([code])
}

model dbTypes {
  id        String    @id @unique @default(cuid()) @db.VarChar(255)
  dbName    String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@index([id])
}
